---
title: Using Signal Sciences Service Broker for PCF
owner: Partners
---

This topic describes how to use Signal Sciences Service Broker for Pivotal Cloud Foundry (PCF).

##<a id='enable-agent'></a> Enable the Agent for Your App

To use the [Signal Sciences](http://signalsciences.com) service with your app, you must first enable the Signal Sciences agent that runs within the app.

### Overview

The Signal Sciences Agent does the following:

* Monitors and protects Cloud Foundry apps 
* Provides attack and anomaly visibility through the [Signal Sciences Dashboard](https://dashboard.signalsciences.net)

### Enable

Follow the steps outlined below to enable the Signal Sciences agent with your app. All languages and frameworks are supported.

1. Ensure the `.enable_sigsci_decorator` file is present in the `$BUILD_DIR` of your app. Note, this is just an empty file.

1. Set the following environment variables of your app using `cf set-env`:
	* **Required**
		* Agent keys, which can be obtained from the *Agents* page in the [Signal Sciences Dashboard] (https://dashboard.signalsciences.net/) 
			* `SIGSCI_ACCESSKEYID`
			* `SIGSCI_SECRETACCESSKEY`
	* **Optional**
		* `SIGSCI_REVERSE_PROXY_UPSTREAM` (default value is `127.0.0.1:8081`)
		* `SIGSCI_SERVER_HOSTNAME`

1. Ensure your app process is configured to listen for connections on the `SIGSCI_REVERSE_PROXY_UPSTREAM` IP address and port.

For more information on agent configuration options see the agent configuration documentation, [https://dashboard.signalsciences.net/documentation/installation/agent-configuration] (https://dashboard.signalsciences.net/documentation/installation/agent-configuration).

##<a id='use-dashboard'></a> Use the Signal Sciences Dashboard

With Signal Sciences enabled, every time your app is deployed and running, you will have visibility into common web attacks and anomalies via the [Signal Sciences Dashboard](https://dashboard.signalsciences.net/). 

In the Dashboard, you can enable blocking to protect your application from attacks like SQL Injection, Cross-Site Scripting, Directory Traversal, Command Execution, etc. Also, by leveraging Signal Sciences custom signals you can enable visibility and protection over the business risks associated with your app, e.g Account Takeover, High Risk Transactions, Vulnerability Discovery, and Policy Validation.